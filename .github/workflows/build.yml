name: Build Executables

on:
  release:
    types: [created]
  workflow_dispatch:

# Add top-level permission configuration, ensure write access to content and packages
permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements/requirements-all.txt
      - name: Test SSL before build
        run: |
          python test_ssl.py
      - name: Build with PyInstaller
        run: |
          pyinstaller mcp-interactive.spec
      - name: Copy test script to dist
        run: |
          copy test_ssl.py dist/
      - name: Test executable basic functionality
        run: |
          cd dist
          .\mcp-interactive.exe --version || echo "Executable runs but may not support version flag"
      - name: Test UI functionality (non-blocking)
        run: |
          cd dist
          start /b .\mcp-interactive.exe test select_option --ui pyqt
          # Wait 3 seconds, if process is alive, consider test successful
          timeout /t 3
          # Try to close the process
          taskkill /f /im mcp-interactive.exe || echo "Process already exited"
      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: mcp-interactive-windows
          path: dist/mcp-interactive.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements/requirements-all.txt
      - name: Test SSL before build
        run: |
          python test_ssl.py
      - name: Build with PyInstaller
        run: |
          pyinstaller mcp-interactive.spec
      - name: Test executable basic functionality
        run: |
          cd dist
          ./mcp-interactive --version || echo "Executable runs but may not support version flag"
      - name: Test UI functionality (non-blocking)
        run: |
          cd dist
          # Run in background, terminate after 3 seconds
          ./mcp-interactive test select_option --ui cli &
          PID=$!
          sleep 3
          kill -15 $PID || echo "Process already exited"
      - name: Upload macOS executable
        uses: actions/upload-artifact@v4
        with:
          name: mcp-interactive-macos
          path: dist/mcp-interactive

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          sudo apt-get update
          sudo apt-get install -y python3-dev libffi-dev
          pip install -r requirements/requirements-all.txt
      - name: Test SSL before build
        run: |
          python test_ssl.py
      - name: Build with PyInstaller
        run: |
          pyinstaller mcp-interactive.spec
      - name: Test executable basic functionality
        run: |
          cd dist
          ./mcp-interactive --version || echo "Executable runs but may not support version flag"
      - name: Test UI functionality (non-blocking)
        run: |
          cd dist
          # Use CLI interface for testing on Linux
          ./mcp-interactive test select_option --ui cli &
          PID=$!
          sleep 3
          kill -15 $PID || echo "Process already exited"
      - name: Upload Linux executable
        uses: actions/upload-artifact@v4
        with:
          name: mcp-interactive-linux
          path: dist/mcp-interactive

  create-release-assets:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: mcp-interactive-windows
          path: windows
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: mcp-interactive-macos
          path: macos
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: mcp-interactive-linux
          path: linux
      - name: Compress artifacts
        run: |
          zip -r mcp-interactive-windows.zip windows
          zip -r mcp-interactive-macos.zip macos
          zip -r mcp-interactive-linux.zip linux
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            mcp-interactive-windows.zip
            mcp-interactive-macos.zip
            mcp-interactive-linux.zip 